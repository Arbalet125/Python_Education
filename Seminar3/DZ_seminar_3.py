# Задайте список из нескольких чисел. Напишите программу, которая найдёт сумму элементов списка, стоящих на нечётной позиции.

# data = list(map(int,input("Введите числа для заполнения массива через пробел:\n".split())))
# lst = []
# if len(data) == 1:              # если строка с одним символом
#     print (data[0])             # печатаем первое число списка и все
# else:
#     for i in range(len(data)):
#         # if (i%2 == 1):        # выводится некрасиво, ибо для пользователя, счет начинается с первого элемента списка, а не с 0,
#         if (i%2 == 0):          # так что, для красоты вывода, лучше искать именно четные элементы списка
#             lst.append(data[i])
# print (f"Cумма нечетных элементов списка ", data, "равняется:", sum(lst))

###################################################################################

# Напишите программу, которая найдёт произведение пар чисел списка. Парой считаем первый и последний элемент, второй и предпоследний и т.д.


# def mult_lst(lst):
#     if len(lst) % 2 != 0:               # Сначала найдем длину для нового списка. Если список состоит из нечетного количества элементов
#         new_lst_leng = len(lst)//2 + 1  # длина нового списка будет равнятся: "половина длины исходного списка + 1"
#     else:                               # Если же количество элементов исходного списка четное,
#         new_lst_leng = len(lst)//2      # то длина нового списка равняется просто половине длины исходного списка.
#     for i in range(new_lst_leng):
#         new_lst = [lst[i]*lst[len(lst)-i-1]]
#     print(f"Произведение пар списка:\n", lst)
#     print(f"равняется: ", str(new_lst).strip('[').strip(']')) #долго мучился пытаясь сделать вывод без квадратных скобок :)
    
# lst = list(map(int, input("Введите числа для заполнения массива через пробел:\n").split()))
# mult_lst(lst)

###################################################################################